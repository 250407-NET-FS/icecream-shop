// <auto-generated />
using System;
using IcecreamShopAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IcecreamShopAPI.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomerIcecream", b =>
                {
                    b.Property<string>("CustomersEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IcecreamHistoryId")
                        .HasColumnType("int");

                    b.HasKey("CustomersEmail", "IcecreamHistoryId");

                    b.HasIndex("IcecreamHistoryId");

                    b.ToTable("CustomerIcecream");
                });

            modelBuilder.Entity("IcecreamShopAPI.Models.Cashier", b =>
                {
                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhoneNumber");

                    b.ToTable("Cashiers");

                    b.HasData(
                        new
                        {
                            PhoneNumber = "305-123-4567",
                            Name = "John Pickleberry"
                        },
                        new
                        {
                            PhoneNumber = "305-533-6103",
                            Name = "Jessica Largecake"
                        });
                });

            modelBuilder.Entity("IcecreamShopAPI.Models.Customer", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Email = "coldcoder9225@proton.me",
                            Name = "Lucas Rodriguez"
                        },
                        new
                        {
                            Email = "mail@potatoes.vore",
                            Name = "M Andy"
                        });
                });

            modelBuilder.Entity("IcecreamShopAPI.Models.Icecream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string>("Flavors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnCone")
                        .HasColumnType("bit");

                    b.Property<int>("Scoops")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("Toppings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Icecreams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Flavors = "[\"Blueberry\",\"Strawberry\"]",
                            OnCone = true,
                            Scoops = 2,
                            Size = 2,
                            Toppings = "[\"Cherry\"]"
                        },
                        new
                        {
                            Id = 2,
                            Flavors = "[\"Mint Chocolate\"]",
                            OnCone = false,
                            Scoops = 1,
                            Size = 3,
                            Toppings = "[\"Sprinkles\",\"Chocolate Chips\"]"
                        });
                });

            modelBuilder.Entity("IcecreamShopAPI.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CashierPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CashierPhoneNumber");

                    b.HasIndex("CustomerEmail");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("IcecreamTransaction", b =>
                {
                    b.Property<int>("IcecreamsId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionsId")
                        .HasColumnType("int");

                    b.HasKey("IcecreamsId", "TransactionsId");

                    b.HasIndex("TransactionsId");

                    b.ToTable("IcecreamTransaction");
                });

            modelBuilder.Entity("CustomerIcecream", b =>
                {
                    b.HasOne("IcecreamShopAPI.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IcecreamShopAPI.Models.Icecream", null)
                        .WithMany()
                        .HasForeignKey("IcecreamHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IcecreamShopAPI.Models.Transaction", b =>
                {
                    b.HasOne("IcecreamShopAPI.Models.Cashier", null)
                        .WithMany("TransactionHistory")
                        .HasForeignKey("CashierPhoneNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IcecreamShopAPI.Models.Customer", null)
                        .WithMany("TransactionHistory")
                        .HasForeignKey("CustomerEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IcecreamTransaction", b =>
                {
                    b.HasOne("IcecreamShopAPI.Models.Icecream", null)
                        .WithMany()
                        .HasForeignKey("IcecreamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IcecreamShopAPI.Models.Transaction", null)
                        .WithMany()
                        .HasForeignKey("TransactionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IcecreamShopAPI.Models.Cashier", b =>
                {
                    b.Navigation("TransactionHistory");
                });

            modelBuilder.Entity("IcecreamShopAPI.Models.Customer", b =>
                {
                    b.Navigation("TransactionHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
